#!/bin/sh
set -e

### BEGIN INIT INFO
# Provides:           tutum-agent
# Required-Start:     $syslog $remote_fs
# Required-Stop:      $syslog $remote_fs
# Should-Start:       cgroupfs-mount cgroup-lite
# Should-Stop:        cgroupfs-mount cgroup-lite
# Default-Start:      2 3 4 5
# Default-Stop:       0 1 6
# Short-Description: start and stop tutum-agent
# Description: Daemon for tutum-agent
### END INIT INFO

# Get lsb functions
. /lib/lsb/init-functions

BASE="tutum-agent"
AGENT="/usr/bin/${BASE}"
# This is the pid file managed by tutum-agent itself
AGENT_PIDFILE="/var/run/${BASE}.pid"
# This is the pid file created/managed by start-stop-daemon
AGENT_SSD_PIDFILE="/var/log/${BASE}.pid"
AGENT_LOGFILE="/var/log/${BASE}.log"
AGENT_DESC="tutum agent"

# Check tutum agent is present
if [ ! -x ${AGENT} ]; then
        log_failure_msg "${AGENT} not present or not executable"
        exit 1
fi

check_init() {
         # see also init_is_upstart in /lib/lsb/init-functions (which isn't available in Ubuntu 12.04, or we'd use it directly)
         if [ -x /sbin/initctl ] && /sbin/initctl version 2>/dev/null | grep -q upstart; then         
                log_failure_msg "${AGENT_DESC} is managed via upstart, try using service $BASE $1" 
                exit 1
         fi 
}

fail_unless_root() {
        if [ "$(id -u)" != '0' ]; then
                log_failure_msg "${AGENT_DESC} must be run as root"
                exit 1
        fi
}

cgroupfs_mount() {
        # see also https://github.com/tianon/cgroupfs-mount/blob/master/cgroupfs-mount
        if grep -v '^#' /etc/fstab | grep -q cgroup \
                || [ ! -e /proc/cgroups ] \
                || [ ! -d /sys/fs/cgroup ]; then
                return
        fi
        if ! mountpoint -q /sys/fs/cgroup; then
                mount -t tmpfs -o uid=0,gid=0,mode=0755 cgroup /sys/fs/cgroup
        fi
        (
                cd /sys/fs/cgroup
                for sys in $(awk '!/^#/ { if ($4 == 1) print $1 }' /proc/cgroups); do
                        mkdir -p $sys
                        if ! mountpoint -q $sys; then
                                if ! mount -n -t cgroup -o $sys cgroup $sys; then
                                        rmdir $sys || true
                                fi
                        fi
                done
        )
}


case "$1" in
        start)
                check_init
                fail_unless_root
                cgroupfs_mount

                touch "$AGENT_LOGFILE"

                ulimit -n 1048576
                if [ "$BASH" ]; then
                        ulimit -u 1048576
                else
                        ulimit -p 1048576
                fi

                log_begin_msg "Starting ${AGENT_DESC}: ${BASE}"
                start-stop-daemon --start --background \
                        --no-close \
                        --exec "${AGENT}" \
                        --pidfile "${AGENT_SSD_PIDFILE}" \
                        --make-pidfile
                log_end_msg $?
                ;;

        stop)
                check_init
                fail_unless_root
                log_begin_msg "Stopping ${AGENT_DESC}: ${BASE}"
                start-stop-daemon --stop --pidfile "${AGENT_SSD_PIDFILE}" --retry 10
                log_end_msg $?
                ;;

        restart)
                check_init
                fail_unless_root
                agent_pid=`cat "$AGENT_SSD_PIDFILE" 2>/dev/null`
                [ -n "${agent_pid}" ] \
                        && ps -p ${agent_pid} > /dev/null 2>&1 \
                        && $0 stop
                $0 start
                ;;

        force-reload)
                check_init
                fail_unless_root
                $0 restart
                ;;

        status)
                check_init
                status_of_proc -p "$AGENT_SSD_PIDFILE" "${AGENT}" "${AGENT_DESC}"
                ;;

        *)
                echo "Usage: service ${BASE} {start|stop|restart|status}"
                exit 1
                ;;
esac
